//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IManage.Core.IManageScheduleService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Schedule", Namespace="http://schemas.datacontract.org/2004/07/IManageService.BusinessLogic.Domain")]
    public partial class Schedule : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime CreatedDateField;
        
        private System.Nullable<System.DateTime> DeletedDateField;
        
        private IManage.Core.IManageScheduleService.Employee EmployeeField;
        
        private int EmployeeIdField;
        
        private string EmployeePinCodeField;
        
        private System.DateTime EndHourField;
        
        private int IdField;
        
        private bool IsDeletedField;
        
        private System.DateTime StartHourField;
        
        private bool UpdatedField;
        
        private System.Nullable<System.DateTime> UpdatedDateField;
        
        private IManage.Core.IManageScheduleService.WeekDay WeekDayField;
        
        private int WeekNumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DeletedDate {
            get {
                return this.DeletedDateField;
            }
            set {
                if ((this.DeletedDateField.Equals(value) != true)) {
                    this.DeletedDateField = value;
                    this.RaisePropertyChanged("DeletedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IManage.Core.IManageScheduleService.Employee Employee {
            get {
                return this.EmployeeField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeField, value) != true)) {
                    this.EmployeeField = value;
                    this.RaisePropertyChanged("Employee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmployeeId {
            get {
                return this.EmployeeIdField;
            }
            set {
                if ((this.EmployeeIdField.Equals(value) != true)) {
                    this.EmployeeIdField = value;
                    this.RaisePropertyChanged("EmployeeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployeePinCode {
            get {
                return this.EmployeePinCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeePinCodeField, value) != true)) {
                    this.EmployeePinCodeField = value;
                    this.RaisePropertyChanged("EmployeePinCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndHour {
            get {
                return this.EndHourField;
            }
            set {
                if ((this.EndHourField.Equals(value) != true)) {
                    this.EndHourField = value;
                    this.RaisePropertyChanged("EndHour");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartHour {
            get {
                return this.StartHourField;
            }
            set {
                if ((this.StartHourField.Equals(value) != true)) {
                    this.StartHourField = value;
                    this.RaisePropertyChanged("StartHour");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Updated {
            get {
                return this.UpdatedField;
            }
            set {
                if ((this.UpdatedField.Equals(value) != true)) {
                    this.UpdatedField = value;
                    this.RaisePropertyChanged("Updated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdatedDate {
            get {
                return this.UpdatedDateField;
            }
            set {
                if ((this.UpdatedDateField.Equals(value) != true)) {
                    this.UpdatedDateField = value;
                    this.RaisePropertyChanged("UpdatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IManage.Core.IManageScheduleService.WeekDay WeekDay {
            get {
                return this.WeekDayField;
            }
            set {
                if ((this.WeekDayField.Equals(value) != true)) {
                    this.WeekDayField = value;
                    this.RaisePropertyChanged("WeekDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WeekNumber {
            get {
                return this.WeekNumberField;
            }
            set {
                if ((this.WeekNumberField.Equals(value) != true)) {
                    this.WeekNumberField = value;
                    this.RaisePropertyChanged("WeekNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Employee", Namespace="http://schemas.datacontract.org/2004/07/IManageService.BusinessLogic.Domain")]
    public partial class Employee : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AddressField;
        
        private System.Nullable<int> BsnNumberField;
        
        private System.Nullable<int> ClockInOutIdField;
        
        private System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageScheduleService.ClockInOut> ClockInOutsField;
        
        private System.Nullable<System.DateTime> DateOfBirthField;
        
        private string EmailField;
        
        private int EmployeeIdField;
        
        private string FirstNameField;
        
        private System.Nullable<IManage.Core.IManageScheduleService.Gender> GenderField;
        
        private bool IsClockedField;
        
        private bool IsDeletedField;
        
        private System.Nullable<IManage.Core.IManageScheduleService.JobTitle> JobTitleField;
        
        private string LastNameField;
        
        private System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageScheduleService.Notification> NotificationsField;
        
        private long PhoneNumberField;
        
        private string PinCodeField;
        
        private System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageScheduleService.Schedule> SchedulesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BsnNumber {
            get {
                return this.BsnNumberField;
            }
            set {
                if ((this.BsnNumberField.Equals(value) != true)) {
                    this.BsnNumberField = value;
                    this.RaisePropertyChanged("BsnNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ClockInOutId {
            get {
                return this.ClockInOutIdField;
            }
            set {
                if ((this.ClockInOutIdField.Equals(value) != true)) {
                    this.ClockInOutIdField = value;
                    this.RaisePropertyChanged("ClockInOutId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageScheduleService.ClockInOut> ClockInOuts {
            get {
                return this.ClockInOutsField;
            }
            set {
                if ((object.ReferenceEquals(this.ClockInOutsField, value) != true)) {
                    this.ClockInOutsField = value;
                    this.RaisePropertyChanged("ClockInOuts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateOfBirth {
            get {
                return this.DateOfBirthField;
            }
            set {
                if ((this.DateOfBirthField.Equals(value) != true)) {
                    this.DateOfBirthField = value;
                    this.RaisePropertyChanged("DateOfBirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmployeeId {
            get {
                return this.EmployeeIdField;
            }
            set {
                if ((this.EmployeeIdField.Equals(value) != true)) {
                    this.EmployeeIdField = value;
                    this.RaisePropertyChanged("EmployeeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<IManage.Core.IManageScheduleService.Gender> Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((this.GenderField.Equals(value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsClocked {
            get {
                return this.IsClockedField;
            }
            set {
                if ((this.IsClockedField.Equals(value) != true)) {
                    this.IsClockedField = value;
                    this.RaisePropertyChanged("IsClocked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<IManage.Core.IManageScheduleService.JobTitle> JobTitle {
            get {
                return this.JobTitleField;
            }
            set {
                if ((this.JobTitleField.Equals(value) != true)) {
                    this.JobTitleField = value;
                    this.RaisePropertyChanged("JobTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageScheduleService.Notification> Notifications {
            get {
                return this.NotificationsField;
            }
            set {
                if ((object.ReferenceEquals(this.NotificationsField, value) != true)) {
                    this.NotificationsField = value;
                    this.RaisePropertyChanged("Notifications");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((this.PhoneNumberField.Equals(value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PinCode {
            get {
                return this.PinCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PinCodeField, value) != true)) {
                    this.PinCodeField = value;
                    this.RaisePropertyChanged("PinCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageScheduleService.Schedule> Schedules {
            get {
                return this.SchedulesField;
            }
            set {
                if ((object.ReferenceEquals(this.SchedulesField, value) != true)) {
                    this.SchedulesField = value;
                    this.RaisePropertyChanged("Schedules");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WeekDay", Namespace="http://schemas.datacontract.org/2004/07/IManageService.BusinessLogic.Domain")]
    public enum WeekDay : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Monday = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Tuesday = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Wednesday = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Thursday = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Friday = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Saturday = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sunday = 6,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClockInOut", Namespace="http://schemas.datacontract.org/2004/07/IManageService.BusinessLogic.Domain")]
    public partial class ClockInOut : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<System.DateTime> ClockInDateTimeField;
        
        private System.Nullable<System.DateTime> ClockOutDateTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ClockInDateTime {
            get {
                return this.ClockInDateTimeField;
            }
            set {
                if ((this.ClockInDateTimeField.Equals(value) != true)) {
                    this.ClockInDateTimeField = value;
                    this.RaisePropertyChanged("ClockInDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ClockOutDateTime {
            get {
                return this.ClockOutDateTimeField;
            }
            set {
                if ((this.ClockOutDateTimeField.Equals(value) != true)) {
                    this.ClockOutDateTimeField = value;
                    this.RaisePropertyChanged("ClockOutDateTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Gender", Namespace="http://schemas.datacontract.org/2004/07/IManageService.BusinessLogic.Domain")]
    public enum Gender : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Male = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Female = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobTitle", Namespace="http://schemas.datacontract.org/2004/07/IManageService.BusinessLogic.Domain")]
    public enum JobTitle : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Manager = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Chef = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Waiter = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DishWasher = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Notification", Namespace="http://schemas.datacontract.org/2004/07/IManageService.BusinessLogic.Domain")]
    public partial class Notification : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime CreatedDateField;
        
        private System.Nullable<System.DateTime> DeletedDateField;
        
        private IManage.Core.IManageScheduleService.Employee EmployeeField;
        
        private string EmployeePinCodeField;
        
        private bool IsResolvedField;
        
        private string MessageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DeletedDate {
            get {
                return this.DeletedDateField;
            }
            set {
                if ((this.DeletedDateField.Equals(value) != true)) {
                    this.DeletedDateField = value;
                    this.RaisePropertyChanged("DeletedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IManage.Core.IManageScheduleService.Employee Employee {
            get {
                return this.EmployeeField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeField, value) != true)) {
                    this.EmployeeField = value;
                    this.RaisePropertyChanged("Employee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployeePinCode {
            get {
                return this.EmployeePinCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeePinCodeField, value) != true)) {
                    this.EmployeePinCodeField = value;
                    this.RaisePropertyChanged("EmployeePinCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsResolved {
            get {
                return this.IsResolvedField;
            }
            set {
                if ((this.IsResolvedField.Equals(value) != true)) {
                    this.IsResolvedField = value;
                    this.RaisePropertyChanged("IsResolved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="IManageScheduleService.IScheduleService")]
    public interface IScheduleService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScheduleService/AddSchedules", ReplyAction="http://tempuri.org/IScheduleService/AddSchedulesResponse")]
        System.IAsyncResult BeginAddSchedules(System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageScheduleService.Schedule> schedules, System.AsyncCallback callback, object asyncState);
        
        bool EndAddSchedules(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScheduleService/AddAndUpdateSchedules", ReplyAction="http://tempuri.org/IScheduleService/AddAndUpdateSchedulesResponse")]
        System.IAsyncResult BeginAddAndUpdateSchedules(System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageScheduleService.Schedule> schedulesTobeAddOrUpdate, System.AsyncCallback callback, object asyncState);
        
        bool EndAddAndUpdateSchedules(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScheduleService/DeleteSchedules", ReplyAction="http://tempuri.org/IScheduleService/DeleteSchedulesResponse")]
        System.IAsyncResult BeginDeleteSchedules(System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageScheduleService.Schedule> schedulesToBeRemove, System.AsyncCallback callback, object asyncState);
        
        bool EndDeleteSchedules(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScheduleService/GetSchedulesWithEmployeePinCodeAndWeekNumber", ReplyAction="http://tempuri.org/IScheduleService/GetSchedulesWithEmployeePinCodeAndWeekNumberR" +
            "esponse")]
        System.IAsyncResult BeginGetSchedulesWithEmployeePinCodeAndWeekNumber(string employeePincode, int weekNumber, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageScheduleService.Schedule> EndGetSchedulesWithEmployeePinCodeAndWeekNumber(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScheduleService/GetSchedulesWithGivenWeekNumber", ReplyAction="http://tempuri.org/IScheduleService/GetSchedulesWithGivenWeekNumberResponse")]
        System.IAsyncResult BeginGetSchedulesWithGivenWeekNumber(int weekNumber, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageScheduleService.Schedule> EndGetSchedulesWithGivenWeekNumber(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IScheduleServiceChannel : IManage.Core.IManageScheduleService.IScheduleService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddSchedulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddSchedulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddAndUpdateSchedulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddAndUpdateSchedulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteSchedulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteSchedulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSchedulesWithEmployeePinCodeAndWeekNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSchedulesWithEmployeePinCodeAndWeekNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageScheduleService.Schedule> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageScheduleService.Schedule>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSchedulesWithGivenWeekNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSchedulesWithGivenWeekNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageScheduleService.Schedule> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageScheduleService.Schedule>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ScheduleServiceClient : System.ServiceModel.ClientBase<IManage.Core.IManageScheduleService.IScheduleService>, IManage.Core.IManageScheduleService.IScheduleService {
        
        private BeginOperationDelegate onBeginAddSchedulesDelegate;
        
        private EndOperationDelegate onEndAddSchedulesDelegate;
        
        private System.Threading.SendOrPostCallback onAddSchedulesCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddAndUpdateSchedulesDelegate;
        
        private EndOperationDelegate onEndAddAndUpdateSchedulesDelegate;
        
        private System.Threading.SendOrPostCallback onAddAndUpdateSchedulesCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteSchedulesDelegate;
        
        private EndOperationDelegate onEndDeleteSchedulesDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteSchedulesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSchedulesWithEmployeePinCodeAndWeekNumberDelegate;
        
        private EndOperationDelegate onEndGetSchedulesWithEmployeePinCodeAndWeekNumberDelegate;
        
        private System.Threading.SendOrPostCallback onGetSchedulesWithEmployeePinCodeAndWeekNumberCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSchedulesWithGivenWeekNumberDelegate;
        
        private EndOperationDelegate onEndGetSchedulesWithGivenWeekNumberDelegate;
        
        private System.Threading.SendOrPostCallback onGetSchedulesWithGivenWeekNumberCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ScheduleServiceClient() : 
                base(ScheduleServiceClient.GetDefaultBinding(), ScheduleServiceClient.GetDefaultEndpointAddress()) {
        }
        
        public ScheduleServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(ScheduleServiceClient.GetBindingForEndpoint(endpointConfiguration), ScheduleServiceClient.GetEndpointAddress(endpointConfiguration)) {
        }
        
        public ScheduleServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ScheduleServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
        }
        
        public ScheduleServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ScheduleServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
        }
        
        public ScheduleServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<AddSchedulesCompletedEventArgs> AddSchedulesCompleted;
        
        public event System.EventHandler<AddAndUpdateSchedulesCompletedEventArgs> AddAndUpdateSchedulesCompleted;
        
        public event System.EventHandler<DeleteSchedulesCompletedEventArgs> DeleteSchedulesCompleted;
        
        public event System.EventHandler<GetSchedulesWithEmployeePinCodeAndWeekNumberCompletedEventArgs> GetSchedulesWithEmployeePinCodeAndWeekNumberCompleted;
        
        public event System.EventHandler<GetSchedulesWithGivenWeekNumberCompletedEventArgs> GetSchedulesWithGivenWeekNumberCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IManage.Core.IManageScheduleService.IScheduleService.BeginAddSchedules(System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageScheduleService.Schedule> schedules, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddSchedules(schedules, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool IManage.Core.IManageScheduleService.IScheduleService.EndAddSchedules(System.IAsyncResult result) {
            return base.Channel.EndAddSchedules(result);
        }
        
        private System.IAsyncResult OnBeginAddSchedules(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageScheduleService.Schedule> schedules = ((System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageScheduleService.Schedule>)(inValues[0]));
            return ((IManage.Core.IManageScheduleService.IScheduleService)(this)).BeginAddSchedules(schedules, callback, asyncState);
        }
        
        private object[] OnEndAddSchedules(System.IAsyncResult result) {
            bool retVal = ((IManage.Core.IManageScheduleService.IScheduleService)(this)).EndAddSchedules(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddSchedulesCompleted(object state) {
            if ((this.AddSchedulesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddSchedulesCompleted(this, new AddSchedulesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddSchedulesAsync(System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageScheduleService.Schedule> schedules) {
            this.AddSchedulesAsync(schedules, null);
        }
        
        public void AddSchedulesAsync(System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageScheduleService.Schedule> schedules, object userState) {
            if ((this.onBeginAddSchedulesDelegate == null)) {
                this.onBeginAddSchedulesDelegate = new BeginOperationDelegate(this.OnBeginAddSchedules);
            }
            if ((this.onEndAddSchedulesDelegate == null)) {
                this.onEndAddSchedulesDelegate = new EndOperationDelegate(this.OnEndAddSchedules);
            }
            if ((this.onAddSchedulesCompletedDelegate == null)) {
                this.onAddSchedulesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddSchedulesCompleted);
            }
            base.InvokeAsync(this.onBeginAddSchedulesDelegate, new object[] {
                        schedules}, this.onEndAddSchedulesDelegate, this.onAddSchedulesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IManage.Core.IManageScheduleService.IScheduleService.BeginAddAndUpdateSchedules(System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageScheduleService.Schedule> schedulesTobeAddOrUpdate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddAndUpdateSchedules(schedulesTobeAddOrUpdate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool IManage.Core.IManageScheduleService.IScheduleService.EndAddAndUpdateSchedules(System.IAsyncResult result) {
            return base.Channel.EndAddAndUpdateSchedules(result);
        }
        
        private System.IAsyncResult OnBeginAddAndUpdateSchedules(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageScheduleService.Schedule> schedulesTobeAddOrUpdate = ((System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageScheduleService.Schedule>)(inValues[0]));
            return ((IManage.Core.IManageScheduleService.IScheduleService)(this)).BeginAddAndUpdateSchedules(schedulesTobeAddOrUpdate, callback, asyncState);
        }
        
        private object[] OnEndAddAndUpdateSchedules(System.IAsyncResult result) {
            bool retVal = ((IManage.Core.IManageScheduleService.IScheduleService)(this)).EndAddAndUpdateSchedules(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddAndUpdateSchedulesCompleted(object state) {
            if ((this.AddAndUpdateSchedulesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddAndUpdateSchedulesCompleted(this, new AddAndUpdateSchedulesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddAndUpdateSchedulesAsync(System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageScheduleService.Schedule> schedulesTobeAddOrUpdate) {
            this.AddAndUpdateSchedulesAsync(schedulesTobeAddOrUpdate, null);
        }
        
        public void AddAndUpdateSchedulesAsync(System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageScheduleService.Schedule> schedulesTobeAddOrUpdate, object userState) {
            if ((this.onBeginAddAndUpdateSchedulesDelegate == null)) {
                this.onBeginAddAndUpdateSchedulesDelegate = new BeginOperationDelegate(this.OnBeginAddAndUpdateSchedules);
            }
            if ((this.onEndAddAndUpdateSchedulesDelegate == null)) {
                this.onEndAddAndUpdateSchedulesDelegate = new EndOperationDelegate(this.OnEndAddAndUpdateSchedules);
            }
            if ((this.onAddAndUpdateSchedulesCompletedDelegate == null)) {
                this.onAddAndUpdateSchedulesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddAndUpdateSchedulesCompleted);
            }
            base.InvokeAsync(this.onBeginAddAndUpdateSchedulesDelegate, new object[] {
                        schedulesTobeAddOrUpdate}, this.onEndAddAndUpdateSchedulesDelegate, this.onAddAndUpdateSchedulesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IManage.Core.IManageScheduleService.IScheduleService.BeginDeleteSchedules(System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageScheduleService.Schedule> schedulesToBeRemove, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteSchedules(schedulesToBeRemove, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool IManage.Core.IManageScheduleService.IScheduleService.EndDeleteSchedules(System.IAsyncResult result) {
            return base.Channel.EndDeleteSchedules(result);
        }
        
        private System.IAsyncResult OnBeginDeleteSchedules(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageScheduleService.Schedule> schedulesToBeRemove = ((System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageScheduleService.Schedule>)(inValues[0]));
            return ((IManage.Core.IManageScheduleService.IScheduleService)(this)).BeginDeleteSchedules(schedulesToBeRemove, callback, asyncState);
        }
        
        private object[] OnEndDeleteSchedules(System.IAsyncResult result) {
            bool retVal = ((IManage.Core.IManageScheduleService.IScheduleService)(this)).EndDeleteSchedules(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteSchedulesCompleted(object state) {
            if ((this.DeleteSchedulesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteSchedulesCompleted(this, new DeleteSchedulesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteSchedulesAsync(System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageScheduleService.Schedule> schedulesToBeRemove) {
            this.DeleteSchedulesAsync(schedulesToBeRemove, null);
        }
        
        public void DeleteSchedulesAsync(System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageScheduleService.Schedule> schedulesToBeRemove, object userState) {
            if ((this.onBeginDeleteSchedulesDelegate == null)) {
                this.onBeginDeleteSchedulesDelegate = new BeginOperationDelegate(this.OnBeginDeleteSchedules);
            }
            if ((this.onEndDeleteSchedulesDelegate == null)) {
                this.onEndDeleteSchedulesDelegate = new EndOperationDelegate(this.OnEndDeleteSchedules);
            }
            if ((this.onDeleteSchedulesCompletedDelegate == null)) {
                this.onDeleteSchedulesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteSchedulesCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteSchedulesDelegate, new object[] {
                        schedulesToBeRemove}, this.onEndDeleteSchedulesDelegate, this.onDeleteSchedulesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IManage.Core.IManageScheduleService.IScheduleService.BeginGetSchedulesWithEmployeePinCodeAndWeekNumber(string employeePincode, int weekNumber, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSchedulesWithEmployeePinCodeAndWeekNumber(employeePincode, weekNumber, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageScheduleService.Schedule> IManage.Core.IManageScheduleService.IScheduleService.EndGetSchedulesWithEmployeePinCodeAndWeekNumber(System.IAsyncResult result) {
            return base.Channel.EndGetSchedulesWithEmployeePinCodeAndWeekNumber(result);
        }
        
        private System.IAsyncResult OnBeginGetSchedulesWithEmployeePinCodeAndWeekNumber(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string employeePincode = ((string)(inValues[0]));
            int weekNumber = ((int)(inValues[1]));
            return ((IManage.Core.IManageScheduleService.IScheduleService)(this)).BeginGetSchedulesWithEmployeePinCodeAndWeekNumber(employeePincode, weekNumber, callback, asyncState);
        }
        
        private object[] OnEndGetSchedulesWithEmployeePinCodeAndWeekNumber(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageScheduleService.Schedule> retVal = ((IManage.Core.IManageScheduleService.IScheduleService)(this)).EndGetSchedulesWithEmployeePinCodeAndWeekNumber(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSchedulesWithEmployeePinCodeAndWeekNumberCompleted(object state) {
            if ((this.GetSchedulesWithEmployeePinCodeAndWeekNumberCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSchedulesWithEmployeePinCodeAndWeekNumberCompleted(this, new GetSchedulesWithEmployeePinCodeAndWeekNumberCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSchedulesWithEmployeePinCodeAndWeekNumberAsync(string employeePincode, int weekNumber) {
            this.GetSchedulesWithEmployeePinCodeAndWeekNumberAsync(employeePincode, weekNumber, null);
        }
        
        public void GetSchedulesWithEmployeePinCodeAndWeekNumberAsync(string employeePincode, int weekNumber, object userState) {
            if ((this.onBeginGetSchedulesWithEmployeePinCodeAndWeekNumberDelegate == null)) {
                this.onBeginGetSchedulesWithEmployeePinCodeAndWeekNumberDelegate = new BeginOperationDelegate(this.OnBeginGetSchedulesWithEmployeePinCodeAndWeekNumber);
            }
            if ((this.onEndGetSchedulesWithEmployeePinCodeAndWeekNumberDelegate == null)) {
                this.onEndGetSchedulesWithEmployeePinCodeAndWeekNumberDelegate = new EndOperationDelegate(this.OnEndGetSchedulesWithEmployeePinCodeAndWeekNumber);
            }
            if ((this.onGetSchedulesWithEmployeePinCodeAndWeekNumberCompletedDelegate == null)) {
                this.onGetSchedulesWithEmployeePinCodeAndWeekNumberCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSchedulesWithEmployeePinCodeAndWeekNumberCompleted);
            }
            base.InvokeAsync(this.onBeginGetSchedulesWithEmployeePinCodeAndWeekNumberDelegate, new object[] {
                        employeePincode,
                        weekNumber}, this.onEndGetSchedulesWithEmployeePinCodeAndWeekNumberDelegate, this.onGetSchedulesWithEmployeePinCodeAndWeekNumberCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IManage.Core.IManageScheduleService.IScheduleService.BeginGetSchedulesWithGivenWeekNumber(int weekNumber, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSchedulesWithGivenWeekNumber(weekNumber, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageScheduleService.Schedule> IManage.Core.IManageScheduleService.IScheduleService.EndGetSchedulesWithGivenWeekNumber(System.IAsyncResult result) {
            return base.Channel.EndGetSchedulesWithGivenWeekNumber(result);
        }
        
        private System.IAsyncResult OnBeginGetSchedulesWithGivenWeekNumber(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int weekNumber = ((int)(inValues[0]));
            return ((IManage.Core.IManageScheduleService.IScheduleService)(this)).BeginGetSchedulesWithGivenWeekNumber(weekNumber, callback, asyncState);
        }
        
        private object[] OnEndGetSchedulesWithGivenWeekNumber(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageScheduleService.Schedule> retVal = ((IManage.Core.IManageScheduleService.IScheduleService)(this)).EndGetSchedulesWithGivenWeekNumber(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSchedulesWithGivenWeekNumberCompleted(object state) {
            if ((this.GetSchedulesWithGivenWeekNumberCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSchedulesWithGivenWeekNumberCompleted(this, new GetSchedulesWithGivenWeekNumberCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSchedulesWithGivenWeekNumberAsync(int weekNumber) {
            this.GetSchedulesWithGivenWeekNumberAsync(weekNumber, null);
        }
        
        public void GetSchedulesWithGivenWeekNumberAsync(int weekNumber, object userState) {
            if ((this.onBeginGetSchedulesWithGivenWeekNumberDelegate == null)) {
                this.onBeginGetSchedulesWithGivenWeekNumberDelegate = new BeginOperationDelegate(this.OnBeginGetSchedulesWithGivenWeekNumber);
            }
            if ((this.onEndGetSchedulesWithGivenWeekNumberDelegate == null)) {
                this.onEndGetSchedulesWithGivenWeekNumberDelegate = new EndOperationDelegate(this.OnEndGetSchedulesWithGivenWeekNumber);
            }
            if ((this.onGetSchedulesWithGivenWeekNumberCompletedDelegate == null)) {
                this.onGetSchedulesWithGivenWeekNumberCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSchedulesWithGivenWeekNumberCompleted);
            }
            base.InvokeAsync(this.onBeginGetSchedulesWithGivenWeekNumberDelegate, new object[] {
                        weekNumber}, this.onEndGetSchedulesWithGivenWeekNumberDelegate, this.onGetSchedulesWithGivenWeekNumberCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override IManage.Core.IManageScheduleService.IScheduleService CreateChannel() {
            return new ScheduleServiceClientChannel(this);
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.ScheduleService)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.MaxReceivedMessageSize = int.MaxValue;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.ScheduleService)) {
                return new System.ServiceModel.EndpointAddress("http://localhost:8090/IManageService/Services/ScheduleService");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return ScheduleServiceClient.GetBindingForEndpoint(EndpointConfiguration.ScheduleService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return ScheduleServiceClient.GetEndpointAddress(EndpointConfiguration.ScheduleService);
        }
        
        private class ScheduleServiceClientChannel : ChannelBase<IManage.Core.IManageScheduleService.IScheduleService>, IManage.Core.IManageScheduleService.IScheduleService {
            
            public ScheduleServiceClientChannel(System.ServiceModel.ClientBase<IManage.Core.IManageScheduleService.IScheduleService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginAddSchedules(System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageScheduleService.Schedule> schedules, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = schedules;
                System.IAsyncResult _result = base.BeginInvoke("AddSchedules", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndAddSchedules(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("AddSchedules", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddAndUpdateSchedules(System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageScheduleService.Schedule> schedulesTobeAddOrUpdate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = schedulesTobeAddOrUpdate;
                System.IAsyncResult _result = base.BeginInvoke("AddAndUpdateSchedules", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndAddAndUpdateSchedules(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("AddAndUpdateSchedules", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteSchedules(System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageScheduleService.Schedule> schedulesToBeRemove, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = schedulesToBeRemove;
                System.IAsyncResult _result = base.BeginInvoke("DeleteSchedules", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndDeleteSchedules(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("DeleteSchedules", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetSchedulesWithEmployeePinCodeAndWeekNumber(string employeePincode, int weekNumber, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = employeePincode;
                _args[1] = weekNumber;
                System.IAsyncResult _result = base.BeginInvoke("GetSchedulesWithEmployeePinCodeAndWeekNumber", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageScheduleService.Schedule> EndGetSchedulesWithEmployeePinCodeAndWeekNumber(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageScheduleService.Schedule> _result = ((System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageScheduleService.Schedule>)(base.EndInvoke("GetSchedulesWithEmployeePinCodeAndWeekNumber", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetSchedulesWithGivenWeekNumber(int weekNumber, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = weekNumber;
                System.IAsyncResult _result = base.BeginInvoke("GetSchedulesWithGivenWeekNumber", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageScheduleService.Schedule> EndGetSchedulesWithGivenWeekNumber(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageScheduleService.Schedule> _result = ((System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageScheduleService.Schedule>)(base.EndInvoke("GetSchedulesWithGivenWeekNumber", _args, result)));
                return _result;
            }
        }
        
        public enum EndpointConfiguration {
            
            ScheduleService,
        }
    }
}
