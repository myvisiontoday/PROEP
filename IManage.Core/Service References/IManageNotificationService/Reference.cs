//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IManage.Core.IManageNotificationService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Notification", Namespace="http://schemas.datacontract.org/2004/07/IManageService.BusinessLogic.Domain")]
    public partial class Notification : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime CreatedDateField;
        
        private System.Nullable<System.DateTime> DeletedDateField;
        
        private IManage.Core.IManageNotificationService.Employee EmployeeField;
        
        private string EmployeePinCodeField;
        
        private bool IsResolvedField;
        
        private string MessageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DeletedDate {
            get {
                return this.DeletedDateField;
            }
            set {
                if ((this.DeletedDateField.Equals(value) != true)) {
                    this.DeletedDateField = value;
                    this.RaisePropertyChanged("DeletedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IManage.Core.IManageNotificationService.Employee Employee {
            get {
                return this.EmployeeField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeField, value) != true)) {
                    this.EmployeeField = value;
                    this.RaisePropertyChanged("Employee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployeePinCode {
            get {
                return this.EmployeePinCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeePinCodeField, value) != true)) {
                    this.EmployeePinCodeField = value;
                    this.RaisePropertyChanged("EmployeePinCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsResolved {
            get {
                return this.IsResolvedField;
            }
            set {
                if ((this.IsResolvedField.Equals(value) != true)) {
                    this.IsResolvedField = value;
                    this.RaisePropertyChanged("IsResolved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Employee", Namespace="http://schemas.datacontract.org/2004/07/IManageService.BusinessLogic.Domain")]
    public partial class Employee : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AddressField;
        
        private System.Nullable<int> BsnNumberField;
        
        private System.Nullable<int> ClockInOutIdField;
        
        private System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageNotificationService.ClockInOut> ClockInOutsField;
        
        private System.Nullable<System.DateTime> DateOfBirthField;
        
        private string EmailField;
        
        private int EmployeeIdField;
        
        private string FirstNameField;
        
        private System.Nullable<IManage.Core.IManageNotificationService.Gender> GenderField;
        
        private bool IsClockedField;
        
        private bool IsDeletedField;
        
        private System.Nullable<IManage.Core.IManageNotificationService.JobTitle> JobTitleField;
        
        private string LastNameField;
        
        private System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageNotificationService.Notification> NotificationsField;
        
        private long PhoneNumberField;
        
        private string PinCodeField;
        
        private System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageNotificationService.Schedule> SchedulesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BsnNumber {
            get {
                return this.BsnNumberField;
            }
            set {
                if ((this.BsnNumberField.Equals(value) != true)) {
                    this.BsnNumberField = value;
                    this.RaisePropertyChanged("BsnNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ClockInOutId {
            get {
                return this.ClockInOutIdField;
            }
            set {
                if ((this.ClockInOutIdField.Equals(value) != true)) {
                    this.ClockInOutIdField = value;
                    this.RaisePropertyChanged("ClockInOutId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageNotificationService.ClockInOut> ClockInOuts {
            get {
                return this.ClockInOutsField;
            }
            set {
                if ((object.ReferenceEquals(this.ClockInOutsField, value) != true)) {
                    this.ClockInOutsField = value;
                    this.RaisePropertyChanged("ClockInOuts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateOfBirth {
            get {
                return this.DateOfBirthField;
            }
            set {
                if ((this.DateOfBirthField.Equals(value) != true)) {
                    this.DateOfBirthField = value;
                    this.RaisePropertyChanged("DateOfBirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmployeeId {
            get {
                return this.EmployeeIdField;
            }
            set {
                if ((this.EmployeeIdField.Equals(value) != true)) {
                    this.EmployeeIdField = value;
                    this.RaisePropertyChanged("EmployeeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<IManage.Core.IManageNotificationService.Gender> Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((this.GenderField.Equals(value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsClocked {
            get {
                return this.IsClockedField;
            }
            set {
                if ((this.IsClockedField.Equals(value) != true)) {
                    this.IsClockedField = value;
                    this.RaisePropertyChanged("IsClocked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<IManage.Core.IManageNotificationService.JobTitle> JobTitle {
            get {
                return this.JobTitleField;
            }
            set {
                if ((this.JobTitleField.Equals(value) != true)) {
                    this.JobTitleField = value;
                    this.RaisePropertyChanged("JobTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageNotificationService.Notification> Notifications {
            get {
                return this.NotificationsField;
            }
            set {
                if ((object.ReferenceEquals(this.NotificationsField, value) != true)) {
                    this.NotificationsField = value;
                    this.RaisePropertyChanged("Notifications");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((this.PhoneNumberField.Equals(value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PinCode {
            get {
                return this.PinCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PinCodeField, value) != true)) {
                    this.PinCodeField = value;
                    this.RaisePropertyChanged("PinCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageNotificationService.Schedule> Schedules {
            get {
                return this.SchedulesField;
            }
            set {
                if ((object.ReferenceEquals(this.SchedulesField, value) != true)) {
                    this.SchedulesField = value;
                    this.RaisePropertyChanged("Schedules");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClockInOut", Namespace="http://schemas.datacontract.org/2004/07/IManageService.BusinessLogic.Domain")]
    public partial class ClockInOut : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<System.DateTime> ClockInDateTimeField;
        
        private System.Nullable<System.DateTime> ClockOutDateTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ClockInDateTime {
            get {
                return this.ClockInDateTimeField;
            }
            set {
                if ((this.ClockInDateTimeField.Equals(value) != true)) {
                    this.ClockInDateTimeField = value;
                    this.RaisePropertyChanged("ClockInDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ClockOutDateTime {
            get {
                return this.ClockOutDateTimeField;
            }
            set {
                if ((this.ClockOutDateTimeField.Equals(value) != true)) {
                    this.ClockOutDateTimeField = value;
                    this.RaisePropertyChanged("ClockOutDateTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Gender", Namespace="http://schemas.datacontract.org/2004/07/IManageService.BusinessLogic.Domain")]
    public enum Gender : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Male = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Female = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobTitle", Namespace="http://schemas.datacontract.org/2004/07/IManageService.BusinessLogic.Domain")]
    public enum JobTitle : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Manager = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Chef = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Waiter = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DishWasher = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Schedule", Namespace="http://schemas.datacontract.org/2004/07/IManageService.BusinessLogic.Domain")]
    public partial class Schedule : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime CreatedDateField;
        
        private System.Nullable<System.DateTime> DeletedDateField;
        
        private IManage.Core.IManageNotificationService.Employee EmployeeField;
        
        private int EmployeeIdField;
        
        private string EmployeePinCodeField;
        
        private System.DateTime EndHourField;
        
        private int IdField;
        
        private bool IsDeletedField;
        
        private System.DateTime StartHourField;
        
        private bool UpdatedField;
        
        private System.Nullable<System.DateTime> UpdatedDateField;
        
        private IManage.Core.IManageNotificationService.WeekDay WeekDayField;
        
        private int WeekNumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DeletedDate {
            get {
                return this.DeletedDateField;
            }
            set {
                if ((this.DeletedDateField.Equals(value) != true)) {
                    this.DeletedDateField = value;
                    this.RaisePropertyChanged("DeletedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IManage.Core.IManageNotificationService.Employee Employee {
            get {
                return this.EmployeeField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeField, value) != true)) {
                    this.EmployeeField = value;
                    this.RaisePropertyChanged("Employee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmployeeId {
            get {
                return this.EmployeeIdField;
            }
            set {
                if ((this.EmployeeIdField.Equals(value) != true)) {
                    this.EmployeeIdField = value;
                    this.RaisePropertyChanged("EmployeeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployeePinCode {
            get {
                return this.EmployeePinCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeePinCodeField, value) != true)) {
                    this.EmployeePinCodeField = value;
                    this.RaisePropertyChanged("EmployeePinCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndHour {
            get {
                return this.EndHourField;
            }
            set {
                if ((this.EndHourField.Equals(value) != true)) {
                    this.EndHourField = value;
                    this.RaisePropertyChanged("EndHour");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartHour {
            get {
                return this.StartHourField;
            }
            set {
                if ((this.StartHourField.Equals(value) != true)) {
                    this.StartHourField = value;
                    this.RaisePropertyChanged("StartHour");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Updated {
            get {
                return this.UpdatedField;
            }
            set {
                if ((this.UpdatedField.Equals(value) != true)) {
                    this.UpdatedField = value;
                    this.RaisePropertyChanged("Updated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdatedDate {
            get {
                return this.UpdatedDateField;
            }
            set {
                if ((this.UpdatedDateField.Equals(value) != true)) {
                    this.UpdatedDateField = value;
                    this.RaisePropertyChanged("UpdatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IManage.Core.IManageNotificationService.WeekDay WeekDay {
            get {
                return this.WeekDayField;
            }
            set {
                if ((this.WeekDayField.Equals(value) != true)) {
                    this.WeekDayField = value;
                    this.RaisePropertyChanged("WeekDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WeekNumber {
            get {
                return this.WeekNumberField;
            }
            set {
                if ((this.WeekNumberField.Equals(value) != true)) {
                    this.WeekNumberField = value;
                    this.RaisePropertyChanged("WeekNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WeekDay", Namespace="http://schemas.datacontract.org/2004/07/IManageService.BusinessLogic.Domain")]
    public enum WeekDay : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Monday = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Tuesday = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Wednesday = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Thursday = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Friday = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Saturday = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sunday = 6,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="IManageNotificationService.INotificationService")]
    public interface INotificationService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INotificationService/SendNotification", ReplyAction="http://tempuri.org/INotificationService/SendNotificationResponse")]
        System.IAsyncResult BeginSendNotification(IManage.Core.IManageNotificationService.Notification notification, System.AsyncCallback callback, object asyncState);
        
        bool EndSendNotification(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INotificationService/GetAllNotifications", ReplyAction="http://tempuri.org/INotificationService/GetAllNotificationsResponse")]
        System.IAsyncResult BeginGetAllNotifications(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageNotificationService.Notification> EndGetAllNotifications(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INotificationServiceChannel : IManage.Core.IManageNotificationService.INotificationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SendNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SendNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllNotificationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllNotificationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageNotificationService.Notification> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageNotificationService.Notification>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NotificationServiceClient : System.ServiceModel.ClientBase<IManage.Core.IManageNotificationService.INotificationService>, IManage.Core.IManageNotificationService.INotificationService {
        
        private BeginOperationDelegate onBeginSendNotificationDelegate;
        
        private EndOperationDelegate onEndSendNotificationDelegate;
        
        private System.Threading.SendOrPostCallback onSendNotificationCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllNotificationsDelegate;
        
        private EndOperationDelegate onEndGetAllNotificationsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllNotificationsCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public NotificationServiceClient() : 
                base(NotificationServiceClient.GetDefaultBinding(), NotificationServiceClient.GetDefaultEndpointAddress()) {
        }
        
        public NotificationServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(NotificationServiceClient.GetBindingForEndpoint(endpointConfiguration), NotificationServiceClient.GetEndpointAddress(endpointConfiguration)) {
        }
        
        public NotificationServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(NotificationServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
        }
        
        public NotificationServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(NotificationServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
        }
        
        public NotificationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<SendNotificationCompletedEventArgs> SendNotificationCompleted;
        
        public event System.EventHandler<GetAllNotificationsCompletedEventArgs> GetAllNotificationsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IManage.Core.IManageNotificationService.INotificationService.BeginSendNotification(IManage.Core.IManageNotificationService.Notification notification, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendNotification(notification, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool IManage.Core.IManageNotificationService.INotificationService.EndSendNotification(System.IAsyncResult result) {
            return base.Channel.EndSendNotification(result);
        }
        
        private System.IAsyncResult OnBeginSendNotification(object[] inValues, System.AsyncCallback callback, object asyncState) {
            IManage.Core.IManageNotificationService.Notification notification = ((IManage.Core.IManageNotificationService.Notification)(inValues[0]));
            return ((IManage.Core.IManageNotificationService.INotificationService)(this)).BeginSendNotification(notification, callback, asyncState);
        }
        
        private object[] OnEndSendNotification(System.IAsyncResult result) {
            bool retVal = ((IManage.Core.IManageNotificationService.INotificationService)(this)).EndSendNotification(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSendNotificationCompleted(object state) {
            if ((this.SendNotificationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendNotificationCompleted(this, new SendNotificationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendNotificationAsync(IManage.Core.IManageNotificationService.Notification notification) {
            this.SendNotificationAsync(notification, null);
        }
        
        public void SendNotificationAsync(IManage.Core.IManageNotificationService.Notification notification, object userState) {
            if ((this.onBeginSendNotificationDelegate == null)) {
                this.onBeginSendNotificationDelegate = new BeginOperationDelegate(this.OnBeginSendNotification);
            }
            if ((this.onEndSendNotificationDelegate == null)) {
                this.onEndSendNotificationDelegate = new EndOperationDelegate(this.OnEndSendNotification);
            }
            if ((this.onSendNotificationCompletedDelegate == null)) {
                this.onSendNotificationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendNotificationCompleted);
            }
            base.InvokeAsync(this.onBeginSendNotificationDelegate, new object[] {
                        notification}, this.onEndSendNotificationDelegate, this.onSendNotificationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IManage.Core.IManageNotificationService.INotificationService.BeginGetAllNotifications(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllNotifications(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageNotificationService.Notification> IManage.Core.IManageNotificationService.INotificationService.EndGetAllNotifications(System.IAsyncResult result) {
            return base.Channel.EndGetAllNotifications(result);
        }
        
        private System.IAsyncResult OnBeginGetAllNotifications(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((IManage.Core.IManageNotificationService.INotificationService)(this)).BeginGetAllNotifications(callback, asyncState);
        }
        
        private object[] OnEndGetAllNotifications(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageNotificationService.Notification> retVal = ((IManage.Core.IManageNotificationService.INotificationService)(this)).EndGetAllNotifications(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllNotificationsCompleted(object state) {
            if ((this.GetAllNotificationsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllNotificationsCompleted(this, new GetAllNotificationsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllNotificationsAsync() {
            this.GetAllNotificationsAsync(null);
        }
        
        public void GetAllNotificationsAsync(object userState) {
            if ((this.onBeginGetAllNotificationsDelegate == null)) {
                this.onBeginGetAllNotificationsDelegate = new BeginOperationDelegate(this.OnBeginGetAllNotifications);
            }
            if ((this.onEndGetAllNotificationsDelegate == null)) {
                this.onEndGetAllNotificationsDelegate = new EndOperationDelegate(this.OnEndGetAllNotifications);
            }
            if ((this.onGetAllNotificationsCompletedDelegate == null)) {
                this.onGetAllNotificationsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllNotificationsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllNotificationsDelegate, null, this.onEndGetAllNotificationsDelegate, this.onGetAllNotificationsCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override IManage.Core.IManageNotificationService.INotificationService CreateChannel() {
            return new NotificationServiceClientChannel(this);
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.ClockService)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.MaxReceivedMessageSize = int.MaxValue;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.ClockService)) {
                return new System.ServiceModel.EndpointAddress("http://localhost:8090/IManageService/Services/NotificationService");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return NotificationServiceClient.GetBindingForEndpoint(EndpointConfiguration.ClockService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return NotificationServiceClient.GetEndpointAddress(EndpointConfiguration.ClockService);
        }
        
        private class NotificationServiceClientChannel : ChannelBase<IManage.Core.IManageNotificationService.INotificationService>, IManage.Core.IManageNotificationService.INotificationService {
            
            public NotificationServiceClientChannel(System.ServiceModel.ClientBase<IManage.Core.IManageNotificationService.INotificationService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginSendNotification(IManage.Core.IManageNotificationService.Notification notification, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = notification;
                System.IAsyncResult _result = base.BeginInvoke("SendNotification", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndSendNotification(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("SendNotification", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllNotifications(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAllNotifications", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageNotificationService.Notification> EndGetAllNotifications(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageNotificationService.Notification> _result = ((System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageNotificationService.Notification>)(base.EndInvoke("GetAllNotifications", _args, result)));
                return _result;
            }
        }
        
        public enum EndpointConfiguration {
            
            ClockService,
        }
    }
}
