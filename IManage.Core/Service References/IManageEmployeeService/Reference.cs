//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IManage.Core.IManageEmployeeService {
    using System.Runtime.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Gender", Namespace="http://schemas.datacontract.org/2004/07/IManageService.BusinessLogic.Domain")]
    public enum Gender : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Male = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Female = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobTitle", Namespace="http://schemas.datacontract.org/2004/07/IManageService.BusinessLogic.Domain")]
    public enum JobTitle : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Manager = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Chef = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Waiter = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DishWasher = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Employee", Namespace="http://schemas.datacontract.org/2004/07/IManageService.BusinessLogic.Domain")]
    public partial class Employee : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AddressField;
        
        private System.Nullable<int> BsnNumberField;
        
        private System.Nullable<int> ClockInOutIdField;
        
        private System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageEmployeeService.ClockInOut> ClockInOutsField;
        
        private System.Nullable<System.DateTime> DateOfBirthField;
        
        private string EmailField;
        
        private int EmployeeIdField;
        
        private string FirstNameField;
        
        private System.Nullable<IManage.Core.IManageEmployeeService.Gender> GenderField;
        
        private bool IsClockedField;
        
        private bool IsDeletedField;
        
        private System.Nullable<IManage.Core.IManageEmployeeService.JobTitle> JobTitleField;
        
        private string LastNameField;
        
        private System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageEmployeeService.Notification> NotificationsField;
        
        private long PhoneNumberField;
        
        private string PinCodeField;
        
        private System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageEmployeeService.Schedule> SchedulesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BsnNumber {
            get {
                return this.BsnNumberField;
            }
            set {
                if ((this.BsnNumberField.Equals(value) != true)) {
                    this.BsnNumberField = value;
                    this.RaisePropertyChanged("BsnNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ClockInOutId {
            get {
                return this.ClockInOutIdField;
            }
            set {
                if ((this.ClockInOutIdField.Equals(value) != true)) {
                    this.ClockInOutIdField = value;
                    this.RaisePropertyChanged("ClockInOutId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageEmployeeService.ClockInOut> ClockInOuts {
            get {
                return this.ClockInOutsField;
            }
            set {
                if ((object.ReferenceEquals(this.ClockInOutsField, value) != true)) {
                    this.ClockInOutsField = value;
                    this.RaisePropertyChanged("ClockInOuts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateOfBirth {
            get {
                return this.DateOfBirthField;
            }
            set {
                if ((this.DateOfBirthField.Equals(value) != true)) {
                    this.DateOfBirthField = value;
                    this.RaisePropertyChanged("DateOfBirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmployeeId {
            get {
                return this.EmployeeIdField;
            }
            set {
                if ((this.EmployeeIdField.Equals(value) != true)) {
                    this.EmployeeIdField = value;
                    this.RaisePropertyChanged("EmployeeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<IManage.Core.IManageEmployeeService.Gender> Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((this.GenderField.Equals(value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsClocked {
            get {
                return this.IsClockedField;
            }
            set {
                if ((this.IsClockedField.Equals(value) != true)) {
                    this.IsClockedField = value;
                    this.RaisePropertyChanged("IsClocked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<IManage.Core.IManageEmployeeService.JobTitle> JobTitle {
            get {
                return this.JobTitleField;
            }
            set {
                if ((this.JobTitleField.Equals(value) != true)) {
                    this.JobTitleField = value;
                    this.RaisePropertyChanged("JobTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageEmployeeService.Notification> Notifications {
            get {
                return this.NotificationsField;
            }
            set {
                if ((object.ReferenceEquals(this.NotificationsField, value) != true)) {
                    this.NotificationsField = value;
                    this.RaisePropertyChanged("Notifications");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((this.PhoneNumberField.Equals(value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PinCode {
            get {
                return this.PinCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PinCodeField, value) != true)) {
                    this.PinCodeField = value;
                    this.RaisePropertyChanged("PinCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageEmployeeService.Schedule> Schedules {
            get {
                return this.SchedulesField;
            }
            set {
                if ((object.ReferenceEquals(this.SchedulesField, value) != true)) {
                    this.SchedulesField = value;
                    this.RaisePropertyChanged("Schedules");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClockInOut", Namespace="http://schemas.datacontract.org/2004/07/IManageService.BusinessLogic.Domain")]
    public partial class ClockInOut : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<System.DateTime> ClockInDateTimeField;
        
        private System.Nullable<System.DateTime> ClockOutDateTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ClockInDateTime {
            get {
                return this.ClockInDateTimeField;
            }
            set {
                if ((this.ClockInDateTimeField.Equals(value) != true)) {
                    this.ClockInDateTimeField = value;
                    this.RaisePropertyChanged("ClockInDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ClockOutDateTime {
            get {
                return this.ClockOutDateTimeField;
            }
            set {
                if ((this.ClockOutDateTimeField.Equals(value) != true)) {
                    this.ClockOutDateTimeField = value;
                    this.RaisePropertyChanged("ClockOutDateTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Notification", Namespace="http://schemas.datacontract.org/2004/07/IManageService.BusinessLogic.Domain")]
    public partial class Notification : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime CreatedDateField;
        
        private System.Nullable<System.DateTime> DeletedDateField;
        
        private IManage.Core.IManageEmployeeService.Employee EmployeeField;
        
        private int EmployeeIdField;
        
        private int IdField;
        
        private bool IsDeletedField;
        
        private string MessageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DeletedDate {
            get {
                return this.DeletedDateField;
            }
            set {
                if ((this.DeletedDateField.Equals(value) != true)) {
                    this.DeletedDateField = value;
                    this.RaisePropertyChanged("DeletedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IManage.Core.IManageEmployeeService.Employee Employee {
            get {
                return this.EmployeeField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeField, value) != true)) {
                    this.EmployeeField = value;
                    this.RaisePropertyChanged("Employee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmployeeId {
            get {
                return this.EmployeeIdField;
            }
            set {
                if ((this.EmployeeIdField.Equals(value) != true)) {
                    this.EmployeeIdField = value;
                    this.RaisePropertyChanged("EmployeeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Schedule", Namespace="http://schemas.datacontract.org/2004/07/IManageService.BusinessLogic.Domain")]
    public partial class Schedule : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime CreatedDateField;
        
        private System.Nullable<System.DateTime> DeletedDateField;
        
        private IManage.Core.IManageEmployeeService.Employee EmployeeField;
        
        private int EmployeeIdField;
        
        private string EmployeePinCodeField;
        
        private System.DateTime EndHourField;
        
        private int IdField;
        
        private bool IsDeletedField;
        
        private System.DateTime StartHourField;
        
        private bool UpdatedField;
        
        private System.Nullable<System.DateTime> UpdatedDateField;
        
        private IManage.Core.IManageEmployeeService.WeekDay WeekDayField;
        
        private int WeekNumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DeletedDate {
            get {
                return this.DeletedDateField;
            }
            set {
                if ((this.DeletedDateField.Equals(value) != true)) {
                    this.DeletedDateField = value;
                    this.RaisePropertyChanged("DeletedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IManage.Core.IManageEmployeeService.Employee Employee {
            get {
                return this.EmployeeField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeField, value) != true)) {
                    this.EmployeeField = value;
                    this.RaisePropertyChanged("Employee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmployeeId {
            get {
                return this.EmployeeIdField;
            }
            set {
                if ((this.EmployeeIdField.Equals(value) != true)) {
                    this.EmployeeIdField = value;
                    this.RaisePropertyChanged("EmployeeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployeePinCode {
            get {
                return this.EmployeePinCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeePinCodeField, value) != true)) {
                    this.EmployeePinCodeField = value;
                    this.RaisePropertyChanged("EmployeePinCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndHour {
            get {
                return this.EndHourField;
            }
            set {
                if ((this.EndHourField.Equals(value) != true)) {
                    this.EndHourField = value;
                    this.RaisePropertyChanged("EndHour");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartHour {
            get {
                return this.StartHourField;
            }
            set {
                if ((this.StartHourField.Equals(value) != true)) {
                    this.StartHourField = value;
                    this.RaisePropertyChanged("StartHour");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Updated {
            get {
                return this.UpdatedField;
            }
            set {
                if ((this.UpdatedField.Equals(value) != true)) {
                    this.UpdatedField = value;
                    this.RaisePropertyChanged("Updated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdatedDate {
            get {
                return this.UpdatedDateField;
            }
            set {
                if ((this.UpdatedDateField.Equals(value) != true)) {
                    this.UpdatedDateField = value;
                    this.RaisePropertyChanged("UpdatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IManage.Core.IManageEmployeeService.WeekDay WeekDay {
            get {
                return this.WeekDayField;
            }
            set {
                if ((this.WeekDayField.Equals(value) != true)) {
                    this.WeekDayField = value;
                    this.RaisePropertyChanged("WeekDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WeekNumber {
            get {
                return this.WeekNumberField;
            }
            set {
                if ((this.WeekNumberField.Equals(value) != true)) {
                    this.WeekNumberField = value;
                    this.RaisePropertyChanged("WeekNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WeekDay", Namespace="http://schemas.datacontract.org/2004/07/IManageService.BusinessLogic.Domain")]
    public enum WeekDay : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Monday = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Tuesday = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Wednesday = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Thursday = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Friday = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Saturday = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sunday = 6,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="IManageEmployeeService.IEmployeeService")]
    public interface IEmployeeService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEmployeeService/SaveEmployee", ReplyAction="http://tempuri.org/IEmployeeService/SaveEmployeeResponse")]
        System.IAsyncResult BeginSaveEmployee(string firstName, string lastName, string email, int bsnNumber, string address, long phoneNumber, System.DateTime dateOfBirth, IManage.Core.IManageEmployeeService.Gender gender, IManage.Core.IManageEmployeeService.JobTitle jobTitle, System.AsyncCallback callback, object asyncState);
        
        bool EndSaveEmployee(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEmployeeService/UpdateEmployee", ReplyAction="http://tempuri.org/IEmployeeService/UpdateEmployeeResponse")]
        System.IAsyncResult BeginUpdateEmployee(string employeePincode, string firstName, string lastName, string email, int bsnNumber, string address, long phoneNumber, System.DateTime dateOfBirth, IManage.Core.IManageEmployeeService.Gender gender, IManage.Core.IManageEmployeeService.JobTitle jobTitle, System.AsyncCallback callback, object asyncState);
        
        bool EndUpdateEmployee(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEmployeeService/DeleteEmployeeWithGivenPinCode", ReplyAction="http://tempuri.org/IEmployeeService/DeleteEmployeeWithGivenPinCodeResponse")]
        System.IAsyncResult BeginDeleteEmployeeWithGivenPinCode(string employeePinCode, System.AsyncCallback callback, object asyncState);
        
        bool EndDeleteEmployeeWithGivenPinCode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEmployeeService/GetEmployeeWithGivenPinCode", ReplyAction="http://tempuri.org/IEmployeeService/GetEmployeeWithGivenPinCodeResponse")]
        System.IAsyncResult BeginGetEmployeeWithGivenPinCode(string employeePinCode, System.AsyncCallback callback, object asyncState);
        
        IManage.Core.IManageEmployeeService.Employee EndGetEmployeeWithGivenPinCode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEmployeeService/GetAllEmployees", ReplyAction="http://tempuri.org/IEmployeeService/GetAllEmployeesResponse")]
        System.IAsyncResult BeginGetAllEmployees(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageEmployeeService.Employee> EndGetAllEmployees(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEmployeeService/IsEmployeeClockedIn", ReplyAction="http://tempuri.org/IEmployeeService/IsEmployeeClockedInResponse")]
        System.IAsyncResult BeginIsEmployeeClockedIn(string employeePinCode, System.AsyncCallback callback, object asyncState);
        
        bool EndIsEmployeeClockedIn(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmployeeServiceChannel : IManage.Core.IManageEmployeeService.IEmployeeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveEmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveEmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateEmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateEmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteEmployeeWithGivenPinCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteEmployeeWithGivenPinCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetEmployeeWithGivenPinCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetEmployeeWithGivenPinCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IManage.Core.IManageEmployeeService.Employee Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IManage.Core.IManageEmployeeService.Employee)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllEmployeesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllEmployeesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageEmployeeService.Employee> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageEmployeeService.Employee>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsEmployeeClockedInCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsEmployeeClockedInCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmployeeServiceClient : System.ServiceModel.ClientBase<IManage.Core.IManageEmployeeService.IEmployeeService>, IManage.Core.IManageEmployeeService.IEmployeeService {
        
        private BeginOperationDelegate onBeginSaveEmployeeDelegate;
        
        private EndOperationDelegate onEndSaveEmployeeDelegate;
        
        private System.Threading.SendOrPostCallback onSaveEmployeeCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateEmployeeDelegate;
        
        private EndOperationDelegate onEndUpdateEmployeeDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateEmployeeCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteEmployeeWithGivenPinCodeDelegate;
        
        private EndOperationDelegate onEndDeleteEmployeeWithGivenPinCodeDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteEmployeeWithGivenPinCodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetEmployeeWithGivenPinCodeDelegate;
        
        private EndOperationDelegate onEndGetEmployeeWithGivenPinCodeDelegate;
        
        private System.Threading.SendOrPostCallback onGetEmployeeWithGivenPinCodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllEmployeesDelegate;
        
        private EndOperationDelegate onEndGetAllEmployeesDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllEmployeesCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsEmployeeClockedInDelegate;
        
        private EndOperationDelegate onEndIsEmployeeClockedInDelegate;
        
        private System.Threading.SendOrPostCallback onIsEmployeeClockedInCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public EmployeeServiceClient() : 
                base(EmployeeServiceClient.GetDefaultBinding(), EmployeeServiceClient.GetDefaultEndpointAddress()) {
        }
        
        public EmployeeServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(EmployeeServiceClient.GetBindingForEndpoint(endpointConfiguration), EmployeeServiceClient.GetEndpointAddress(endpointConfiguration)) {
        }
        
        public EmployeeServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(EmployeeServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
        }
        
        public EmployeeServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(EmployeeServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
        }
        
        public EmployeeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<SaveEmployeeCompletedEventArgs> SaveEmployeeCompleted;
        
        public event System.EventHandler<UpdateEmployeeCompletedEventArgs> UpdateEmployeeCompleted;
        
        public event System.EventHandler<DeleteEmployeeWithGivenPinCodeCompletedEventArgs> DeleteEmployeeWithGivenPinCodeCompleted;
        
        public event System.EventHandler<GetEmployeeWithGivenPinCodeCompletedEventArgs> GetEmployeeWithGivenPinCodeCompleted;
        
        public event System.EventHandler<GetAllEmployeesCompletedEventArgs> GetAllEmployeesCompleted;
        
        public event System.EventHandler<IsEmployeeClockedInCompletedEventArgs> IsEmployeeClockedInCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IManage.Core.IManageEmployeeService.IEmployeeService.BeginSaveEmployee(string firstName, string lastName, string email, int bsnNumber, string address, long phoneNumber, System.DateTime dateOfBirth, IManage.Core.IManageEmployeeService.Gender gender, IManage.Core.IManageEmployeeService.JobTitle jobTitle, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveEmployee(firstName, lastName, email, bsnNumber, address, phoneNumber, dateOfBirth, gender, jobTitle, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool IManage.Core.IManageEmployeeService.IEmployeeService.EndSaveEmployee(System.IAsyncResult result) {
            return base.Channel.EndSaveEmployee(result);
        }
        
        private System.IAsyncResult OnBeginSaveEmployee(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string firstName = ((string)(inValues[0]));
            string lastName = ((string)(inValues[1]));
            string email = ((string)(inValues[2]));
            int bsnNumber = ((int)(inValues[3]));
            string address = ((string)(inValues[4]));
            long phoneNumber = ((long)(inValues[5]));
            System.DateTime dateOfBirth = ((System.DateTime)(inValues[6]));
            IManage.Core.IManageEmployeeService.Gender gender = ((IManage.Core.IManageEmployeeService.Gender)(inValues[7]));
            IManage.Core.IManageEmployeeService.JobTitle jobTitle = ((IManage.Core.IManageEmployeeService.JobTitle)(inValues[8]));
            return ((IManage.Core.IManageEmployeeService.IEmployeeService)(this)).BeginSaveEmployee(firstName, lastName, email, bsnNumber, address, phoneNumber, dateOfBirth, gender, jobTitle, callback, asyncState);
        }
        
        private object[] OnEndSaveEmployee(System.IAsyncResult result) {
            bool retVal = ((IManage.Core.IManageEmployeeService.IEmployeeService)(this)).EndSaveEmployee(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveEmployeeCompleted(object state) {
            if ((this.SaveEmployeeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveEmployeeCompleted(this, new SaveEmployeeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveEmployeeAsync(string firstName, string lastName, string email, int bsnNumber, string address, long phoneNumber, System.DateTime dateOfBirth, IManage.Core.IManageEmployeeService.Gender gender, IManage.Core.IManageEmployeeService.JobTitle jobTitle) {
            this.SaveEmployeeAsync(firstName, lastName, email, bsnNumber, address, phoneNumber, dateOfBirth, gender, jobTitle, null);
        }
        
        public void SaveEmployeeAsync(string firstName, string lastName, string email, int bsnNumber, string address, long phoneNumber, System.DateTime dateOfBirth, IManage.Core.IManageEmployeeService.Gender gender, IManage.Core.IManageEmployeeService.JobTitle jobTitle, object userState) {
            if ((this.onBeginSaveEmployeeDelegate == null)) {
                this.onBeginSaveEmployeeDelegate = new BeginOperationDelegate(this.OnBeginSaveEmployee);
            }
            if ((this.onEndSaveEmployeeDelegate == null)) {
                this.onEndSaveEmployeeDelegate = new EndOperationDelegate(this.OnEndSaveEmployee);
            }
            if ((this.onSaveEmployeeCompletedDelegate == null)) {
                this.onSaveEmployeeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveEmployeeCompleted);
            }
            base.InvokeAsync(this.onBeginSaveEmployeeDelegate, new object[] {
                        firstName,
                        lastName,
                        email,
                        bsnNumber,
                        address,
                        phoneNumber,
                        dateOfBirth,
                        gender,
                        jobTitle}, this.onEndSaveEmployeeDelegate, this.onSaveEmployeeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IManage.Core.IManageEmployeeService.IEmployeeService.BeginUpdateEmployee(string employeePincode, string firstName, string lastName, string email, int bsnNumber, string address, long phoneNumber, System.DateTime dateOfBirth, IManage.Core.IManageEmployeeService.Gender gender, IManage.Core.IManageEmployeeService.JobTitle jobTitle, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateEmployee(employeePincode, firstName, lastName, email, bsnNumber, address, phoneNumber, dateOfBirth, gender, jobTitle, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool IManage.Core.IManageEmployeeService.IEmployeeService.EndUpdateEmployee(System.IAsyncResult result) {
            return base.Channel.EndUpdateEmployee(result);
        }
        
        private System.IAsyncResult OnBeginUpdateEmployee(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string employeePincode = ((string)(inValues[0]));
            string firstName = ((string)(inValues[1]));
            string lastName = ((string)(inValues[2]));
            string email = ((string)(inValues[3]));
            int bsnNumber = ((int)(inValues[4]));
            string address = ((string)(inValues[5]));
            long phoneNumber = ((long)(inValues[6]));
            System.DateTime dateOfBirth = ((System.DateTime)(inValues[7]));
            IManage.Core.IManageEmployeeService.Gender gender = ((IManage.Core.IManageEmployeeService.Gender)(inValues[8]));
            IManage.Core.IManageEmployeeService.JobTitle jobTitle = ((IManage.Core.IManageEmployeeService.JobTitle)(inValues[9]));
            return ((IManage.Core.IManageEmployeeService.IEmployeeService)(this)).BeginUpdateEmployee(employeePincode, firstName, lastName, email, bsnNumber, address, phoneNumber, dateOfBirth, gender, jobTitle, callback, asyncState);
        }
        
        private object[] OnEndUpdateEmployee(System.IAsyncResult result) {
            bool retVal = ((IManage.Core.IManageEmployeeService.IEmployeeService)(this)).EndUpdateEmployee(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateEmployeeCompleted(object state) {
            if ((this.UpdateEmployeeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateEmployeeCompleted(this, new UpdateEmployeeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateEmployeeAsync(string employeePincode, string firstName, string lastName, string email, int bsnNumber, string address, long phoneNumber, System.DateTime dateOfBirth, IManage.Core.IManageEmployeeService.Gender gender, IManage.Core.IManageEmployeeService.JobTitle jobTitle) {
            this.UpdateEmployeeAsync(employeePincode, firstName, lastName, email, bsnNumber, address, phoneNumber, dateOfBirth, gender, jobTitle, null);
        }
        
        public void UpdateEmployeeAsync(string employeePincode, string firstName, string lastName, string email, int bsnNumber, string address, long phoneNumber, System.DateTime dateOfBirth, IManage.Core.IManageEmployeeService.Gender gender, IManage.Core.IManageEmployeeService.JobTitle jobTitle, object userState) {
            if ((this.onBeginUpdateEmployeeDelegate == null)) {
                this.onBeginUpdateEmployeeDelegate = new BeginOperationDelegate(this.OnBeginUpdateEmployee);
            }
            if ((this.onEndUpdateEmployeeDelegate == null)) {
                this.onEndUpdateEmployeeDelegate = new EndOperationDelegate(this.OnEndUpdateEmployee);
            }
            if ((this.onUpdateEmployeeCompletedDelegate == null)) {
                this.onUpdateEmployeeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateEmployeeCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateEmployeeDelegate, new object[] {
                        employeePincode,
                        firstName,
                        lastName,
                        email,
                        bsnNumber,
                        address,
                        phoneNumber,
                        dateOfBirth,
                        gender,
                        jobTitle}, this.onEndUpdateEmployeeDelegate, this.onUpdateEmployeeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IManage.Core.IManageEmployeeService.IEmployeeService.BeginDeleteEmployeeWithGivenPinCode(string employeePinCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteEmployeeWithGivenPinCode(employeePinCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool IManage.Core.IManageEmployeeService.IEmployeeService.EndDeleteEmployeeWithGivenPinCode(System.IAsyncResult result) {
            return base.Channel.EndDeleteEmployeeWithGivenPinCode(result);
        }
        
        private System.IAsyncResult OnBeginDeleteEmployeeWithGivenPinCode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string employeePinCode = ((string)(inValues[0]));
            return ((IManage.Core.IManageEmployeeService.IEmployeeService)(this)).BeginDeleteEmployeeWithGivenPinCode(employeePinCode, callback, asyncState);
        }
        
        private object[] OnEndDeleteEmployeeWithGivenPinCode(System.IAsyncResult result) {
            bool retVal = ((IManage.Core.IManageEmployeeService.IEmployeeService)(this)).EndDeleteEmployeeWithGivenPinCode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteEmployeeWithGivenPinCodeCompleted(object state) {
            if ((this.DeleteEmployeeWithGivenPinCodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteEmployeeWithGivenPinCodeCompleted(this, new DeleteEmployeeWithGivenPinCodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteEmployeeWithGivenPinCodeAsync(string employeePinCode) {
            this.DeleteEmployeeWithGivenPinCodeAsync(employeePinCode, null);
        }
        
        public void DeleteEmployeeWithGivenPinCodeAsync(string employeePinCode, object userState) {
            if ((this.onBeginDeleteEmployeeWithGivenPinCodeDelegate == null)) {
                this.onBeginDeleteEmployeeWithGivenPinCodeDelegate = new BeginOperationDelegate(this.OnBeginDeleteEmployeeWithGivenPinCode);
            }
            if ((this.onEndDeleteEmployeeWithGivenPinCodeDelegate == null)) {
                this.onEndDeleteEmployeeWithGivenPinCodeDelegate = new EndOperationDelegate(this.OnEndDeleteEmployeeWithGivenPinCode);
            }
            if ((this.onDeleteEmployeeWithGivenPinCodeCompletedDelegate == null)) {
                this.onDeleteEmployeeWithGivenPinCodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteEmployeeWithGivenPinCodeCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteEmployeeWithGivenPinCodeDelegate, new object[] {
                        employeePinCode}, this.onEndDeleteEmployeeWithGivenPinCodeDelegate, this.onDeleteEmployeeWithGivenPinCodeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IManage.Core.IManageEmployeeService.IEmployeeService.BeginGetEmployeeWithGivenPinCode(string employeePinCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetEmployeeWithGivenPinCode(employeePinCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IManage.Core.IManageEmployeeService.Employee IManage.Core.IManageEmployeeService.IEmployeeService.EndGetEmployeeWithGivenPinCode(System.IAsyncResult result) {
            return base.Channel.EndGetEmployeeWithGivenPinCode(result);
        }
        
        private System.IAsyncResult OnBeginGetEmployeeWithGivenPinCode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string employeePinCode = ((string)(inValues[0]));
            return ((IManage.Core.IManageEmployeeService.IEmployeeService)(this)).BeginGetEmployeeWithGivenPinCode(employeePinCode, callback, asyncState);
        }
        
        private object[] OnEndGetEmployeeWithGivenPinCode(System.IAsyncResult result) {
            IManage.Core.IManageEmployeeService.Employee retVal = ((IManage.Core.IManageEmployeeService.IEmployeeService)(this)).EndGetEmployeeWithGivenPinCode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetEmployeeWithGivenPinCodeCompleted(object state) {
            if ((this.GetEmployeeWithGivenPinCodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetEmployeeWithGivenPinCodeCompleted(this, new GetEmployeeWithGivenPinCodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetEmployeeWithGivenPinCodeAsync(string employeePinCode) {
            this.GetEmployeeWithGivenPinCodeAsync(employeePinCode, null);
        }
        
        public void GetEmployeeWithGivenPinCodeAsync(string employeePinCode, object userState) {
            if ((this.onBeginGetEmployeeWithGivenPinCodeDelegate == null)) {
                this.onBeginGetEmployeeWithGivenPinCodeDelegate = new BeginOperationDelegate(this.OnBeginGetEmployeeWithGivenPinCode);
            }
            if ((this.onEndGetEmployeeWithGivenPinCodeDelegate == null)) {
                this.onEndGetEmployeeWithGivenPinCodeDelegate = new EndOperationDelegate(this.OnEndGetEmployeeWithGivenPinCode);
            }
            if ((this.onGetEmployeeWithGivenPinCodeCompletedDelegate == null)) {
                this.onGetEmployeeWithGivenPinCodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetEmployeeWithGivenPinCodeCompleted);
            }
            base.InvokeAsync(this.onBeginGetEmployeeWithGivenPinCodeDelegate, new object[] {
                        employeePinCode}, this.onEndGetEmployeeWithGivenPinCodeDelegate, this.onGetEmployeeWithGivenPinCodeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IManage.Core.IManageEmployeeService.IEmployeeService.BeginGetAllEmployees(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllEmployees(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageEmployeeService.Employee> IManage.Core.IManageEmployeeService.IEmployeeService.EndGetAllEmployees(System.IAsyncResult result) {
            return base.Channel.EndGetAllEmployees(result);
        }
        
        private System.IAsyncResult OnBeginGetAllEmployees(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((IManage.Core.IManageEmployeeService.IEmployeeService)(this)).BeginGetAllEmployees(callback, asyncState);
        }
        
        private object[] OnEndGetAllEmployees(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageEmployeeService.Employee> retVal = ((IManage.Core.IManageEmployeeService.IEmployeeService)(this)).EndGetAllEmployees(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllEmployeesCompleted(object state) {
            if ((this.GetAllEmployeesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllEmployeesCompleted(this, new GetAllEmployeesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllEmployeesAsync() {
            this.GetAllEmployeesAsync(null);
        }
        
        public void GetAllEmployeesAsync(object userState) {
            if ((this.onBeginGetAllEmployeesDelegate == null)) {
                this.onBeginGetAllEmployeesDelegate = new BeginOperationDelegate(this.OnBeginGetAllEmployees);
            }
            if ((this.onEndGetAllEmployeesDelegate == null)) {
                this.onEndGetAllEmployeesDelegate = new EndOperationDelegate(this.OnEndGetAllEmployees);
            }
            if ((this.onGetAllEmployeesCompletedDelegate == null)) {
                this.onGetAllEmployeesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllEmployeesCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllEmployeesDelegate, null, this.onEndGetAllEmployeesDelegate, this.onGetAllEmployeesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IManage.Core.IManageEmployeeService.IEmployeeService.BeginIsEmployeeClockedIn(string employeePinCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsEmployeeClockedIn(employeePinCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool IManage.Core.IManageEmployeeService.IEmployeeService.EndIsEmployeeClockedIn(System.IAsyncResult result) {
            return base.Channel.EndIsEmployeeClockedIn(result);
        }
        
        private System.IAsyncResult OnBeginIsEmployeeClockedIn(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string employeePinCode = ((string)(inValues[0]));
            return ((IManage.Core.IManageEmployeeService.IEmployeeService)(this)).BeginIsEmployeeClockedIn(employeePinCode, callback, asyncState);
        }
        
        private object[] OnEndIsEmployeeClockedIn(System.IAsyncResult result) {
            bool retVal = ((IManage.Core.IManageEmployeeService.IEmployeeService)(this)).EndIsEmployeeClockedIn(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsEmployeeClockedInCompleted(object state) {
            if ((this.IsEmployeeClockedInCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsEmployeeClockedInCompleted(this, new IsEmployeeClockedInCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsEmployeeClockedInAsync(string employeePinCode) {
            this.IsEmployeeClockedInAsync(employeePinCode, null);
        }
        
        public void IsEmployeeClockedInAsync(string employeePinCode, object userState) {
            if ((this.onBeginIsEmployeeClockedInDelegate == null)) {
                this.onBeginIsEmployeeClockedInDelegate = new BeginOperationDelegate(this.OnBeginIsEmployeeClockedIn);
            }
            if ((this.onEndIsEmployeeClockedInDelegate == null)) {
                this.onEndIsEmployeeClockedInDelegate = new EndOperationDelegate(this.OnEndIsEmployeeClockedIn);
            }
            if ((this.onIsEmployeeClockedInCompletedDelegate == null)) {
                this.onIsEmployeeClockedInCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsEmployeeClockedInCompleted);
            }
            base.InvokeAsync(this.onBeginIsEmployeeClockedInDelegate, new object[] {
                        employeePinCode}, this.onEndIsEmployeeClockedInDelegate, this.onIsEmployeeClockedInCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override IManage.Core.IManageEmployeeService.IEmployeeService CreateChannel() {
            return new EmployeeServiceClientChannel(this);
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.EmployeeService)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.MaxReceivedMessageSize = int.MaxValue;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.EmployeeService)) {
                return new System.ServiceModel.EndpointAddress("http://localhost:8090/IManageService/Services/EmployeesService");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return EmployeeServiceClient.GetBindingForEndpoint(EndpointConfiguration.EmployeeService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return EmployeeServiceClient.GetEndpointAddress(EndpointConfiguration.EmployeeService);
        }
        
        private class EmployeeServiceClientChannel : ChannelBase<IManage.Core.IManageEmployeeService.IEmployeeService>, IManage.Core.IManageEmployeeService.IEmployeeService {
            
            public EmployeeServiceClientChannel(System.ServiceModel.ClientBase<IManage.Core.IManageEmployeeService.IEmployeeService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginSaveEmployee(string firstName, string lastName, string email, int bsnNumber, string address, long phoneNumber, System.DateTime dateOfBirth, IManage.Core.IManageEmployeeService.Gender gender, IManage.Core.IManageEmployeeService.JobTitle jobTitle, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[9];
                _args[0] = firstName;
                _args[1] = lastName;
                _args[2] = email;
                _args[3] = bsnNumber;
                _args[4] = address;
                _args[5] = phoneNumber;
                _args[6] = dateOfBirth;
                _args[7] = gender;
                _args[8] = jobTitle;
                System.IAsyncResult _result = base.BeginInvoke("SaveEmployee", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndSaveEmployee(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("SaveEmployee", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateEmployee(string employeePincode, string firstName, string lastName, string email, int bsnNumber, string address, long phoneNumber, System.DateTime dateOfBirth, IManage.Core.IManageEmployeeService.Gender gender, IManage.Core.IManageEmployeeService.JobTitle jobTitle, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[10];
                _args[0] = employeePincode;
                _args[1] = firstName;
                _args[2] = lastName;
                _args[3] = email;
                _args[4] = bsnNumber;
                _args[5] = address;
                _args[6] = phoneNumber;
                _args[7] = dateOfBirth;
                _args[8] = gender;
                _args[9] = jobTitle;
                System.IAsyncResult _result = base.BeginInvoke("UpdateEmployee", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndUpdateEmployee(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("UpdateEmployee", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteEmployeeWithGivenPinCode(string employeePinCode, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = employeePinCode;
                System.IAsyncResult _result = base.BeginInvoke("DeleteEmployeeWithGivenPinCode", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndDeleteEmployeeWithGivenPinCode(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("DeleteEmployeeWithGivenPinCode", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetEmployeeWithGivenPinCode(string employeePinCode, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = employeePinCode;
                System.IAsyncResult _result = base.BeginInvoke("GetEmployeeWithGivenPinCode", _args, callback, asyncState);
                return _result;
            }
            
            public IManage.Core.IManageEmployeeService.Employee EndGetEmployeeWithGivenPinCode(System.IAsyncResult result) {
                object[] _args = new object[0];
                IManage.Core.IManageEmployeeService.Employee _result = ((IManage.Core.IManageEmployeeService.Employee)(base.EndInvoke("GetEmployeeWithGivenPinCode", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllEmployees(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAllEmployees", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageEmployeeService.Employee> EndGetAllEmployees(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageEmployeeService.Employee> _result = ((System.Collections.ObjectModel.ObservableCollection<IManage.Core.IManageEmployeeService.Employee>)(base.EndInvoke("GetAllEmployees", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginIsEmployeeClockedIn(string employeePinCode, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = employeePinCode;
                System.IAsyncResult _result = base.BeginInvoke("IsEmployeeClockedIn", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndIsEmployeeClockedIn(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("IsEmployeeClockedIn", _args, result)));
                return _result;
            }
        }
        
        public enum EndpointConfiguration {
            
            EmployeeService,
        }
    }
}
